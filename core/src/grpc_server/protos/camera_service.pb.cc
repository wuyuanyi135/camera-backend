// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: camera_service.proto

#include "camera_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace mvcam {
}  // namespace mvcam
namespace protobuf_camera_5fservice_2eproto {
void InitDefaults() {
}

const ::google::protobuf::uint32 TableStruct::offsets[1] = {};
static const ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static const ::google::protobuf::Message* const* file_default_instances = NULL;

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "camera_service.proto", schemas, file_default_instances, TableStruct::offsets,
      NULL, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024camera_service.proto\022\005mvcam\032\033google/pr"
      "otobuf/empty.proto\032\030camera_definitions.p"
      "roto2\376\005\n\rCameraService\022R\n\024GetAvailableAd"
      "apters\022\026.google.protobuf.Empty\032 .mvcam.A"
      "vailableAdaptersResponse\"\000\022@\n\nGetDevices"
      "\022\025.mvcam.AdapterRequest\032\031.mvcam.DeviceLi"
      "stResponse\"\000\0228\n\017QueryDeviceById\022\020.mvcam."
      "IdRequest\032\021.mvcam.DeviceInfo\"\000\0228\n\nOpenCa"
      "mera\022\020.mvcam.IdRequest\032\026.google.protobuf"
      ".Empty\"\000\022<\n\016ShutdownCamera\022\020.mvcam.IdReq"
      "uest\032\026.google.protobuf.Empty\"\000\022D\n\017Config"
      "ureCamera\022\027.mvcam.ConfigureRequest\032\026.goo"
      "gle.protobuf.Empty\"\000\022<\n\020GetConfiguration"
      "\022\020.mvcam.IdRequest\032\024.mvcam.Configuration"
      "\"\000\022.\n\tGetStatus\022\020.mvcam.IdRequest\032\r.mvca"
      "m.Status\"\000\022+\n\007Capture\022\020.mvcam.IdRequest\032"
      "\014.mvcam.Frame\"\000\022<\n\tStreaming\022\027.mvcam.Str"
      "eamingRequest\032\022.mvcam.FrameStream\"\0000\001\0229\n"
      "\013ResetDevice\022\020.mvcam.IdRequest\032\026.google."
      "protobuf.Empty\"\000\022K\n\022ControlDeviceState\022\033"
      ".mvcam.DeviceControlRequest\032\026.google.pro"
      "tobuf.Empty\"\000B:Z8github.com/wuyuanyi135/"
      "MicroVisionCGI/server/proto/mvcamb\006proto"
      "3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 921);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "camera_service.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::protobuf_camera_5fdefinitions_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_camera_5fservice_2eproto
namespace mvcam {

// @@protoc_insertion_point(namespace_scope)
}  // namespace mvcam
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
