// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: camera_service.proto

#include "camera_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace mvcam {
}  // namespace mvcam
namespace protobuf_camera_5fservice_2eproto {
void InitDefaults() {
}

const ::google::protobuf::uint32 TableStruct::offsets[1] = {};
static const ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static const ::google::protobuf::Message* const* file_default_instances = NULL;

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "camera_service.proto", schemas, file_default_instances, TableStruct::offsets,
      NULL, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024camera_service.proto\022\005mvcam\032\033google/pr"
      "otobuf/empty.proto\032\030camera_definitions.p"
      "roto2\211\006\n\030MicroVisionCameraService\022R\n\024Get"
      "AvailableAdapters\022\026.google.protobuf.Empt"
      "y\032 .mvcam.AvailableAdaptersResponse\"\000\022@\n"
      "\nGetDevices\022\025.mvcam.AdapterRequest\032\031.mvc"
      "am.DeviceListResponse\"\000\0228\n\017QueryDeviceBy"
      "Id\022\020.mvcam.IdRequest\032\021.mvcam.DeviceInfo\""
      "\000\0228\n\nOpenCamera\022\020.mvcam.IdRequest\032\026.goog"
      "le.protobuf.Empty\"\000\022<\n\016ShutdownCamera\022\020."
      "mvcam.IdRequest\032\026.google.protobuf.Empty\""
      "\000\022D\n\017ConfigureCamera\022\027.mvcam.ConfigureRe"
      "quest\032\026.google.protobuf.Empty\"\000\022<\n\020GetCo"
      "nfiguration\022\020.mvcam.IdRequest\032\024.mvcam.Co"
      "nfiguration\"\000\022.\n\tGetStatus\022\020.mvcam.IdReq"
      "uest\032\r.mvcam.Status\"\000\022+\n\007Capture\022\020.mvcam"
      ".IdRequest\032\014.mvcam.Frame\"\000\022<\n\tStreaming\022"
      "\027.mvcam.StreamingRequest\032\022.mvcam.FrameSt"
      "ream\"\0000\001\0229\n\013ResetDevice\022\020.mvcam.IdReques"
      "t\032\026.google.protobuf.Empty\"\000\022K\n\022ControlDe"
      "viceState\022\033.mvcam.DeviceControlRequest\032\026"
      ".google.protobuf.Empty\"\000B\'Z%github.com/w"
      "uyuanyi135/mvprotos/mvcamb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 913);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "camera_service.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::protobuf_camera_5fdefinitions_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_camera_5fservice_2eproto
namespace mvcam {

// @@protoc_insertion_point(namespace_scope)
}  // namespace mvcam
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
